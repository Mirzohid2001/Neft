# Generated by Django 5.1.7 on 2025-05-05 18:00

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnalyticsReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('daily', 'Ежедневный'), ('weekly', 'Еженедельный'), ('monthly', 'Ежемесячный')], max_length=10)),
                ('date_from', models.DateField()),
                ('date_to', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='reports/')),
            ],
            options={
                'verbose_name': 'Аналитический отчет',
                'verbose_name_plural': 'Аналитические отчеты',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=20)),
                ('model_name', models.CharField(max_length=50)),
                ('object_id', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Klient nomi')),
            ],
            options={
                'verbose_name': 'Klient',
                'verbose_name_plural': 'Klientlar',
            },
        ),
        migrations.CreateModel(
            name='LocalClient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Klient nomi')),
            ],
            options={
                'verbose_name': 'Mahalliy Klient',
                'verbose_name_plural': ' Mahalliy Klientlar',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='Kod')),
                ('name', models.CharField(max_length=100, verbose_name='Mahsulot nomi')),
                ('category', models.CharField(blank=True, max_length=100, null=True, verbose_name='Kategoriya')),
                ('volume', models.FloatField(default=0, verbose_name='Hajmi (l)')),
                ('weight', models.FloatField(default=0, verbose_name="Og'irligi (kg)")),
                ('density', models.FloatField(default=0, verbose_name='Zichlik (kg/l)')),
                ('specific_weight', models.FloatField(default=0, verbose_name="Udel Og'irligi")),
                ('price_usd', models.FloatField(blank=True, default=0, null=True, verbose_name='Narx (USD)')),
                ('price_sum', models.FloatField(blank=True, default=0, null=True, verbose_name="Narx (so'm)")),
                ('in_qty', models.FloatField(default=0, verbose_name='Umumiy kirim (qty)')),
                ('min_stock', models.FloatField(default=0, verbose_name='Minimum ruxsat etilgan qoldiq')),
                ('out_qty', models.FloatField(default=0, verbose_name='Umumiy chiqim (qty)')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Tavsif')),
                ('zone', models.CharField(blank=True, max_length=50, null=True, verbose_name='Zona')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Yaratilgan sana')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Yangilangan sana')),
            ],
            options={
                'verbose_name': 'продукт',
                'verbose_name_plural': 'продукты',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('contact_person', models.CharField(blank=True, max_length=255, verbose_name='Контактное лицо')),
                ('phone', models.CharField(blank=True, max_length=50, verbose_name='Телефон')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('address', models.TextField(blank=True, verbose_name='Адрес')),
                ('website', models.URLField(blank=True, verbose_name='Вебсайт')),
                ('notes', models.TextField(blank=True, verbose_name='Примечания')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Поставщик',
                'verbose_name_plural': 'Поставщики',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Wagon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wagon_number', models.CharField(max_length=20, unique=True, verbose_name='Vagon raqami')),
                ('net_weight', models.FloatField(default=0, verbose_name="Netto og'irligi")),
                ('meter_weight', models.FloatField(default=0, verbose_name="Meter og'irligi")),
                ('capacity', models.FloatField(default=0, verbose_name="Sig'im (tonna)")),
                ('volume', models.FloatField(default=0, verbose_name='Hajmi (L)')),
                ('price_sum', models.FloatField(default=0, verbose_name="Umumiy summa (so'm)")),
                ('condition', models.CharField(default='Yaxshi', max_length=50, verbose_name='Holati')),
                ('current_quantity', models.FloatField(default=0, verbose_name='Joriy miqdor (qty)')),
            ],
            options={
                'verbose_name': 'Вагон',
                'verbose_name_plural': 'Вагонлар',
                'ordering': ['wagon_number'],
            },
        ),
        migrations.CreateModel(
            name='WagonType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Vagon turi')),
                ('meter_shtok_map', models.JSONField(blank=True, help_text="Masalan: {'1.0': 1000, '1.2':1200}, meter → litr", null=True)),
            ],
            options={
                'verbose_name': 'Vagon turi',
                'verbose_name_plural': 'Vagon turlari',
            },
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Ombor nomi')),
                ('location', models.CharField(blank=True, max_length=200, null=True, verbose_name='Manzil')),
                ('zone', models.CharField(blank=True, max_length=50, null=True, verbose_name='Zona')),
                ('location_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Location Code')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Tavsif')),
            ],
            options={
                'verbose_name': 'Ombor',
                'verbose_name_plural': 'Omborlar',
            },
        ),
        migrations.CreateModel(
            name='InventoryAudit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('start_date', models.DateTimeField(verbose_name='Дата начала')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата завершения')),
                ('status', models.CharField(choices=[('planned', 'Запланирована'), ('in_progress', 'В процессе'), ('completed', 'Завершена'), ('cancelled', 'Отменена')], default='planned', max_length=20, verbose_name='Статус')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_audits', to=settings.AUTH_USER_MODEL, verbose_name='Создал')),
            ],
            options={
                'verbose_name': 'Инвентаризация',
                'verbose_name_plural': 'Инвентаризации',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Movement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Номер документа')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Дата')),
                ('movement_type', models.CharField(choices=[('in', 'Приёмка'), ('out', 'Продажа'), ('production', 'Производство'), ('transfer', 'Перемещение'), ('return', 'Возврат'), ('adjustment', 'Корректировка')], max_length=20, verbose_name='Тип движения')),
                ('status', models.CharField(choices=[('draft', 'Черновик'), ('pending', 'Ожидает обработки'), ('in_progress', 'В обработке'), ('completed', 'Завершен'), ('cancelled', 'Отменен')], default='draft', max_length=20, verbose_name='Статус')),
                ('quantity', models.FloatField(default=0, verbose_name='Количество (тонн)')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Примечание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('confirmed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='confirmed_movements', to=settings.AUTH_USER_MODEL, verbose_name='Подтверждено пользователем')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_movements', to=settings.AUTH_USER_MODEL, verbose_name='Создано пользователем')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.product', verbose_name='Продукт')),
                ('source_warehouse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='source_movements', to='warehouse.warehouse', verbose_name='Исходный склад')),
                ('target_warehouse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='target_movements', to='warehouse.warehouse', verbose_name='Целевой склад')),
            ],
            options={
                'verbose_name': 'Движение',
                'verbose_name_plural': 'Движения',
                'ordering': ['-date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EstokadaOperation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Ожидает обработки'), ('measuring', 'Измерение'), ('processing', 'Обработка данных'), ('completed', 'Завершен'), ('cancelled', 'Отменен')], default='pending', max_length=20, verbose_name='Статус')),
                ('result', models.CharField(blank=True, choices=[('match', 'Совпадает'), ('positive_diff', 'Положительная разница'), ('negative_diff', 'Отрицательная разница')], max_length=20, null=True, verbose_name='Результат')),
                ('actual_quantity', models.FloatField(default=0, verbose_name='Фактическое количество (тонн)')),
                ('actual_density', models.FloatField(blank=True, null=True, verbose_name='Фактическая плотность')),
                ('actual_temperature', models.FloatField(blank=True, null=True, verbose_name='Фактическая температура')),
                ('difference_quantity', models.FloatField(default=0, verbose_name='Разница в количестве (тонн)')),
                ('difference_percentage', models.FloatField(default=0, verbose_name='Разница в процентах')),
                ('processed_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата обработки')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Примечания')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_estokada_operations', to=settings.AUTH_USER_MODEL, verbose_name='Обработано пользователем')),
                ('movement', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='estokada_operation', to='warehouse.movement', verbose_name='Операция движения')),
            ],
            options={
                'verbose_name': 'Операция эстокады',
                'verbose_name_plural': 'Операции эстокады',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reorder_point', models.DecimalField(decimal_places=2, help_text='Количество, при котором нужно делать заказ', max_digits=10, verbose_name='Точка заказа')),
                ('safety_stock', models.DecimalField(decimal_places=2, help_text='Минимальный запас для непредвиденных ситуаций', max_digits=10, verbose_name='Страховой запас')),
                ('order_quantity', models.DecimalField(decimal_places=2, help_text='Рекомендуемое количество для заказа', max_digits=10, verbose_name='Количество заказа')),
                ('lead_time_demand', models.DecimalField(decimal_places=2, help_text='Среднее потребление за время ожидания поставки', max_digits=10, verbose_name='Потребление за время поставки')),
                ('auto_order', models.BooleanField(default=False, help_text='Формировать заказ автоматически при достижении точки заказа', verbose_name='Автоматический заказ')),
                ('last_calculation', models.DateTimeField(blank=True, null=True, verbose_name='Последний расчет')),
                ('notify_emails', models.TextField(blank=True, help_text='Перечислите email через запятую', verbose_name='Email для уведомлений')),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='order_point', to='warehouse.product', verbose_name='Продукт')),
            ],
            options={
                'verbose_name': 'Точка заказа',
                'verbose_name_plural': 'Точки заказа',
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(default=0, verbose_name='Qoldiq (qty)')),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='warehouse.product', verbose_name='Mahsulot')),
            ],
        ),
        migrations.CreateModel(
            name='ProductMinLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_quantity', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Минимальный остаток')),
                ('optimal_quantity', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Оптимальный остаток')),
                ('max_quantity', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Максимальный остаток')),
                ('alert_enabled', models.BooleanField(default=True, verbose_name='Уведомления включены')),
                ('alert_threshold', models.IntegerField(default=10, verbose_name='Порог уведомления (%)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='min_level', to='warehouse.product', verbose_name='Продукт')),
            ],
            options={
                'verbose_name': 'Минимальный уровень продукта',
                'verbose_name_plural': 'Минимальные уровни продуктов',
            },
        ),
        migrations.CreateModel(
            name='PurchasePlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('plan_date', models.DateField(verbose_name='Дата плана')),
                ('status', models.CharField(choices=[('draft', 'Черновик'), ('approved', 'Утвержден'), ('in_progress', 'В процессе'), ('completed', 'Завершен'), ('cancelled', 'Отменен')], default='draft', max_length=20, verbose_name='Статус')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Примечания')),
                ('approved_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата утверждения')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_plans', to=settings.AUTH_USER_MODEL, verbose_name='Утвердил')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_plans', to=settings.AUTH_USER_MODEL, verbose_name='Создал')),
            ],
            options={
                'verbose_name': 'План закупок',
                'verbose_name_plural': 'Планы закупок',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Reservoir',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nomi')),
                ('capacity', models.FloatField(verbose_name="Sig'im (tonna)")),
                ('current_volume', models.FloatField(default=0, verbose_name='Joriy hajm')),
                ('meter_shtok_map', models.JSONField(blank=True, default=dict, verbose_name="Kalibrovka ma'lumotlari")),
                ('current_quantity', models.FloatField(default=0, verbose_name='Joriy miqdor (qty)')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='warehouse.product', verbose_name='Mahsulot')),
                ('warehouse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='warehouse.warehouse', verbose_name='Ombor')),
            ],
            options={
                'verbose_name': 'Rezervuar',
                'verbose_name_plural': 'Rezervuarlar',
            },
        ),
        migrations.CreateModel(
            name='ReservoirMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Sana')),
                ('movement_type', models.CharField(choices=[('in', "Kirim (to'ldirish)"), ('out', "Chiqim (bo'shatish)")], max_length=3, verbose_name='Harakat turi')),
                ('quantity', models.FloatField(verbose_name='Miqdor (qty)')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Izoh')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Yaratilgan sana')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='warehouse.product', verbose_name='Mahsulot')),
                ('reservoir', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.reservoir', verbose_name='Rezervuar')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_needed', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Необходимое количество')),
                ('recommended_order_date', models.DateField(verbose_name='Рекомендуемая дата заказа')),
                ('expected_delivery_date', models.DateField(verbose_name='Ожидаемая дата поставки')),
                ('status', models.CharField(choices=[('pending', 'Ожидает обработки'), ('acknowledged', 'Принято к сведению'), ('ordered', 'Заказано'), ('canceled', 'Отменено')], default='pending', max_length=50, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('note', models.TextField(blank=True, verbose_name='Примечание')),
                ('notified_users', models.ManyToManyField(blank=True, related_name='purchase_notifications', to=settings.AUTH_USER_MODEL, verbose_name='Уведомленные пользователи')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_notifications', to='warehouse.product', verbose_name='Продукт')),
                ('recommended_supplier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchase_recommendations', to='warehouse.supplier', verbose_name='Рекомендуемый поставщик')),
            ],
            options={
                'verbose_name': 'Уведомление о закупке',
                'verbose_name_plural': 'Уведомления о закупках',
                'ordering': ['recommended_order_date', 'status'],
            },
        ),
        migrations.CreateModel(
            name='Placement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(default=0, verbose_name='Qisman miqdor (litr yoki kg)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('movement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='warehouse.movement', verbose_name='Harakat')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.product', verbose_name='Mahsulot')),
                ('reservoir', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='warehouse.reservoir', verbose_name='Rezervuar')),
                ('wagon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='warehouse.wagon', verbose_name='Vagon')),
            ],
        ),
        migrations.CreateModel(
            name='LocalMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Sana')),
                ('movement_type', models.CharField(choices=[('in', 'Kirim'), ('out', 'Chiqim')], default='in', max_length=3, verbose_name='Harakat turi')),
                ('temperature', models.FloatField(blank=True, default=0, null=True, verbose_name='Temperatura (C)')),
                ('density', models.FloatField(blank=True, default=0, null=True, verbose_name='Zichlik')),
                ('liter', models.FloatField(blank=True, default=0, null=True, verbose_name='Litr')),
                ('specific_weight', models.FloatField(blank=True, default=0, null=True, verbose_name="Udel og'irlik")),
                ('quantity', models.FloatField(default=0, verbose_name='Fakt tonna (qty)')),
                ('doc_ton', models.FloatField(default=0, verbose_name="Hujjat bo'yicha ton")),
                ('difference_ton', models.FloatField(default=0, editable=False, verbose_name='Farq (ton)')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Izoh')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Yaratilgan sana')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.localclient', verbose_name='Klient')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='warehouse.product', verbose_name='Mahsulot')),
                ('reservoir', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='warehouse.reservoir', verbose_name='Rezervuar')),
                ('wagon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='warehouse.wagon', verbose_name='Vagon')),
            ],
            options={
                'verbose_name': 'Mahalliy Harakat',
                'verbose_name_plural': 'Mahalliy Harakatlar',
            },
        ),
        migrations.AddField(
            model_name='wagon',
            name='wagon_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='warehouse.wagontype', verbose_name='Vagon tipi'),
        ),
        migrations.CreateModel(
            name='Transport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transport_type', models.CharField(choices=[('truck', 'Грузовик'), ('wagon', 'Вагон')], max_length=10, verbose_name='Тип транспорта')),
                ('transport_number', models.CharField(max_length=100, verbose_name='Номер транспорта')),
                ('density', models.FloatField(blank=True, null=True, verbose_name='Плотность')),
                ('temperature', models.FloatField(default=20, verbose_name='Температура')),
                ('volume', models.FloatField(blank=True, null=True, verbose_name='Объем (л)')),
                ('quantity', models.FloatField(verbose_name='Количество (тонн)')),
                ('doc_quantity', models.FloatField(blank=True, null=True, verbose_name='Количество по документам (тонн)')),
                ('difference', models.FloatField(default=0, verbose_name='Разница (тонн)')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Примечания')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('movement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transports', to='warehouse.movement')),
                ('wagon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='warehouse.wagon', verbose_name='Вагон')),
                ('wagon_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='warehouse.wagontype', verbose_name='Тип вагона')),
                ('warehouse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='warehouse.warehouse', verbose_name='Склад')),
            ],
            options={
                'verbose_name': 'Транспорт',
                'verbose_name_plural': 'Транспорт',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductionSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(verbose_name='Количество (тонны)')),
                ('percentage', models.FloatField(verbose_name='Процентное содержание (%)')),
                ('movement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='raw_materials', to='warehouse.movement')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.product', verbose_name='Компонент')),
                ('source_reservoir', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='production_sources', to='warehouse.reservoir')),
                ('source_wagon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='production_sources', to='warehouse.wagon')),
                ('source_warehouse', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='production_sources', to='warehouse.warehouse')),
            ],
            options={
                'verbose_name': 'Источник сырья для производства',
                'verbose_name_plural': 'Источники сырья для производства',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='warehouse',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='warehouse.warehouse', verbose_name='Ombor'),
        ),
        migrations.CreateModel(
            name='InventoryAuditItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=100, verbose_name='Местоположение')),
                ('expected_quantity', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Учетное количество')),
                ('actual_quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Фактическое количество')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Примечания')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Последнее обновление')),
                ('audit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='warehouse.inventoryaudit', verbose_name='Инвентаризация')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.product', verbose_name='Продукт')),
            ],
            options={
                'verbose_name': 'Позиция инвентаризации',
                'verbose_name_plural': 'Позиции инвентаризации',
                'unique_together': {('audit', 'product', 'location')},
            },
        ),
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_number', models.CharField(max_length=50, verbose_name='Partiya raqami')),
                ('manufacture_date', models.DateField(blank=True, null=True, verbose_name='Ishlab chiqarilgan sana')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='Yaroqlilik muddati')),
                ('in_qty', models.FloatField(default=0, verbose_name='Kirim (qty)')),
                ('out_qty', models.FloatField(default=0, verbose_name='Chiqim (qty)')),
                ('quantity', models.FloatField(default=0, verbose_name='Joriy qoldiq (qty)')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.product', verbose_name='Mahsulot')),
            ],
            options={
                'verbose_name': 'Партия',
                'verbose_name_plural': 'Партиялар',
                'unique_together': {('product', 'batch_number')},
            },
        ),
        migrations.CreateModel(
            name='AnalyticsData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_received', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_shipped', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_produced', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_transferred', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('average_stock', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.product')),
            ],
            options={
                'verbose_name': 'Аналитические данные',
                'verbose_name_plural': 'Аналитические данные',
                'ordering': ['-date'],
                'unique_together': {('date', 'product')},
            },
        ),
        migrations.CreateModel(
            name='PurchasePlanItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Количество')),
                ('priority', models.IntegerField(default=1, verbose_name='Приоритет')),
                ('is_automatic', models.BooleanField(default=False, verbose_name='Автоматически сформирован')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Примечания')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='warehouse.purchaseplan', verbose_name='План закупок')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.product', verbose_name='Продукт')),
            ],
            options={
                'verbose_name': 'Позиция плана закупок',
                'verbose_name_plural': 'Позиции плана закупок',
                'ordering': ['priority'],
                'unique_together': {('plan', 'product')},
            },
        ),
        migrations.CreateModel(
            name='StockForecast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата')),
                ('forecasted_quantity', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Прогнозируемое количество')),
                ('confidence_level', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Уровень уверенности (%)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forecasts', to='warehouse.product', verbose_name='Продукт')),
            ],
            options={
                'verbose_name': 'Прогноз запасов',
                'verbose_name_plural': 'Прогнозы запасов',
                'ordering': ['date'],
                'unique_together': {('product', 'date')},
            },
        ),
        migrations.CreateModel(
            name='ProductSupplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Цена закупки')),
                ('is_preferred', models.BooleanField(default=False, verbose_name='Предпочтительный поставщик')),
                ('min_order_quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Минимальное количество заказа')),
                ('lead_time', models.IntegerField(blank=True, null=True, verbose_name='Срок поставки (дни)')),
                ('last_order_date', models.DateField(blank=True, null=True, verbose_name='Дата последнего заказа')),
                ('last_price_update', models.DateField(blank=True, null=True, verbose_name='Дата последнего обновления цены')),
                ('notes', models.TextField(blank=True, verbose_name='Примечания')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suppliers', to='warehouse.product', verbose_name='Продукт')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_suppliers', to='warehouse.supplier', verbose_name='Поставщик')),
            ],
            options={
                'verbose_name': 'Поставщик продукта',
                'verbose_name_plural': 'Поставщики продуктов',
                'unique_together': {('product', 'supplier')},
            },
        ),
        migrations.CreateModel(
            name='SupplierRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1 - Очень плохо'), (2, '2 - Плохо'), (3, '3 - Удовлетворительно'), (4, '4 - Хорошо'), (5, '5 - Отлично')], verbose_name='Оценка')),
                ('category', models.CharField(choices=[('quality', 'Качество продукции'), ('delivery', 'Своевременность поставки'), ('price', 'Цена'), ('communication', 'Коммуникация'), ('overall', 'Общая оценка')], max_length=100, verbose_name='Категория оценки')),
                ('comment', models.TextField(blank=True, verbose_name='Комментарий')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата оценки')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supplier_ratings', to=settings.AUTH_USER_MODEL, verbose_name='Кто оценил')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='warehouse.supplier', verbose_name='Поставщик')),
            ],
            options={
                'verbose_name': 'Оценка поставщика',
                'verbose_name_plural': 'Оценки поставщиков',
                'unique_together': {('supplier', 'category', 'created_by', 'created_at')},
            },
        ),
        migrations.AddIndex(
            model_name='movement',
            index=models.Index(fields=['movement_type', 'status'], name='warehouse_m_movemen_0f022f_idx'),
        ),
        migrations.AddIndex(
            model_name='movement',
            index=models.Index(fields=['date'], name='warehouse_m_date_41b67b_idx'),
        ),
        migrations.AddIndex(
            model_name='movement',
            index=models.Index(fields=['created_at'], name='warehouse_m_created_1affde_idx'),
        ),
    ]
